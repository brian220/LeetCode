// simple but slow solution
// using head , tail to build a list would be faster
class MinStack {
public:
    /** initialize your data structure here. */
    vector <int> minStack;
    MinStack() {
        
    }
    
    void push(int x) {
        minStack.push_back(x);
    }
    
    void pop() {
        minStack.pop_back();
    }
    
    int top() {
        return minStack.back();
    }
    
    int getMin() {
        int min = minStack[0];
        for (int i = 0; i < minStack.size(); i ++) {
            if ( minStack[i] < min) {
                min = minStack[i];
            }
        }
        return min;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
