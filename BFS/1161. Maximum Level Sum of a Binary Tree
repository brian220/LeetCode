/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 //https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        deque <TreeNode* > q;
        q.push_back(root);
        int level = 0;
        int maxLevel = 0;
        int sum = 0;
        int maxSum = 0;
        while (q.size() != 0) {
            sum = 0;
            level ++;
            int size = q.size();
            for (int i = 0; i < size; i ++) {
                TreeNode* currentNode = q.front();
                q.pop_front();
                sum += currentNode -> val;
                if (currentNode -> left != NULL) {
                    q.push_back(currentNode -> left);
                }
                if (currentNode -> right != NULL) {
                    q.push_back(currentNode -> right);
                }
            }
            
            if (sum > maxSum) {
                maxLevel = level;
                maxSum = sum;
            }
        }
        return maxLevel;
    }
};
