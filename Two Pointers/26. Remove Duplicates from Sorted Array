// Two Pointers
class Solution {
public:
    void swap(int &a, int &b) {
        int temp = a;
        a = b;
        b = temp;
    }
    
    int removeDuplicates(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        int cur = 0;
        
        for (int i = 1; i < nums.size(); i ++) {
            // remove the duplicate
            if (nums[i] != nums[cur]) {
                swap(nums[i], nums[cur + 1]);
                cur ++;
            }
        }
        return cur + 1;
    }
};

// Easy
// Can solved by two pointer, too
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if (nums.size() <= 1) return nums.size();
        int cur = nums[0];
        for (int i = 1; i < nums.size(); i ++) {
            // remove the duplicate
            if (nums[i] == cur) {
                nums.erase(nums.begin() + i);
                i --;
            }
            else {
                cur = nums[i];
            }
        }
        return nums.size();
    }
};
